[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "esg-topic-modeling-dr"
version = "0.1.0"
description = "ESG 報告主題建模與數位韌性量化框架"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
keywords = ["ESG", "topic modeling", "BERTopic", "digital resilience", "NLP"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Text Processing :: Linguistic",
]

dependencies = [
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "bertopic>=0.16.0",
    "scikit-learn>=1.3.0",
    "umap-learn>=0.5.4",
    "hdbscan>=0.8.33",
    "nltk>=3.8.0",
    "spacy>=3.7.0",
    "openai>=1.0.0",
    "tiktoken>=0.5.0",
    "sentence-transformers>=2.2.0",
    "beautifulsoup4>=4.12.0",
    "requests>=2.31.0",
    "lxml>=4.9.0",
    "html5lib>=1.1",
    "PyPDF2>=3.0.0",
    "pdfplumber>=0.10.0",
    "python-dotenv>=1.0.0",
    "tqdm>=4.66.0",
    "pyyaml>=6.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "isort>=5.12.0",
]
viz = [
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    "plotly>=5.17.0",
]
jupyter = [
    "jupyter>=1.0.0",
    "ipykernel>=6.25.0",
    "ipywidgets>=8.1.0",
]
all = [
    "esg-topic-modeling-dr[dev,viz,jupyter]",
]

[project.scripts]
esg-dr = "main:main"

[project.urls]
Homepage = "https://github.com/yourusername/esg-topic-modeling-dr"
Repository = "https://github.com/yourusername/esg-topic-modeling-dr"
Issues = "https://github.com/yourusername/esg-topic-modeling-dr/issues"

[tool.setuptools]
package-dir = {"" = "."}
packages = ["src"]

[tool.setuptools.package-data]
src = ["py.typed"]

# pytest 配置
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--verbose",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
]

# black 配置（程式碼格式化）
[tool.black]
line-length = 100
target-version = ["py39", "py310", "py311", "py312", "py313"]
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.venv
  | \.tox
  | build
  | dist
  | __pycache__
)/
'''

# isort 配置（import 排序）
[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

# mypy 配置（類型檢查）
[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
follow_imports = "normal"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
    "bertopic.*",
    "umap.*",
    "hdbscan.*",
    "sentence_transformers.*",
]
ignore_missing_imports = true

# coverage 配置
[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
